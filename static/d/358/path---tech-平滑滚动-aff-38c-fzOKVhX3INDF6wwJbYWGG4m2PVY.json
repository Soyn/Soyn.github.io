{"data":{"site":{"siteMetadata":{"title":"Move fast and break things.","author":"wang yao","siteUrl":"http://cuteshilina.com/","comment":{"disqusShortName":"","utterances":"Soyn/Soyn.github.io.git"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"50691342-3011-5c91-b969-243902e0b80a","excerpt":"Problem 我们先来看一个 Demo （切到0.5x）: 在上面的Demo中，在 touchStart 的事件的 callback 中跑了一段 JS 的循环，打开 Chrome 的 devtools ，切换到移动端的模式，在页面上滑动的时候，可以明显感觉到左边盒子的滚动有明显的延迟和卡顿，而右边的盒子滚动起来却很顺滑；这两个盒子的 touchStart 事件的 callback 跑的循环是一样的，差异在于右边盒子将 passive 置为了 true 。 Overview…","html":"<h1>Problem</h1>\n<p>我们先来看一个<code>Demo</code>（切到0.5x）:</p>\n<p><iframe src=\"https://codepen.io/alnord/embed/preview/bGdjywK\" style=\"width:100%; height:300px;\"></iframe></p>\n<p>在上面的Demo中，在<code>touchStart</code>的事件的<code>callback</code>中跑了一段<code>JS</code>的循环，打开<code>Chrome</code>的<code>devtools</code>，切换到移动端的模式，在页面上滑动的时候，可以明显感觉到左边盒子的滚动有明显的延迟和卡顿，而右边的盒子滚动起来却很顺滑；这两个盒子的<code>touchStart</code>事件的<code>callback</code>跑的循环是一样的，差异在于右边盒子将<code>passive</code>置为了<code>true</code>。</p>\n<h1>Overview</h1>\n<p>页面的平滑滚动对于用户体验来说是很重要的，特别是移动端，如果开发人员在<code>touchstart</code>或者<code>touchmove</code>中执行了涉及<code>JS</code>的代码，会影响页面的滚动，原因在于页面的滚动在浏览器中是由另一个线程负责的，在页面滚动的过程中，如果触发了<code>JS</code>的执行，这个线程会等待主线程执行完<code>JS</code>再触发滚动，所以，类似于上面<code>demo</code>的代码，左边盒子的<code>touchstart</code>的<code>callback</code>执行了耗时的<code>JS</code>计算，页面的滚动在等待<code>JS</code>的执行完成，用户体验上就会感到卡顿。</p>\n<h1>Solution</h1>\n<p>在</p>","frontmatter":{"title":"使用Passive event保证平滑滚动","date":"March 21, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tech/平滑滚动/","previous":{"fields":{"slug":"/2019-6-15-mvvm/"},"frontmatter":{"title":"双向绑定","category":"Tech"}},"next":null}}