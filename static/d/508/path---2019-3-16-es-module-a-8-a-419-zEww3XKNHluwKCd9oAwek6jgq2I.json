{"data":{"site":{"siteMetadata":{"title":"Move fast and break things.","author":"wang yao","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"Soyn/Soyn.github.io.git"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"78de45a1-ce5f-541a-8294-e8a9d251e545","excerpt":"在ES6之前， 并没有官方标准的模块化方案，在社区中就出现了 和 这两种方案，前者主要用于服务端，后者用在浏览器端，为了统一写法，又出现了 的标准，在 中， 终于有了官方标准的模块化方案，这篇博客我们就来看看 的模块化方案。 Overview 定义和使用模块 如上，是 中 的用法，这里有两个保留字 和 ，从上面的代码中，我们可以发现，对于不同的 方式，对应的 的方式也不一样。 Name Export…","html":"<p>在ES6之前，<code class=\"language-text\">Javascript</code>并没有官方标准的模块化方案，在社区中就出现了<code class=\"language-text\">Common.js</code>和<code class=\"language-text\">AMD</code>这两种方案，前者主要用于服务端，后者用在浏览器端，为了统一写法，又出现了<code class=\"language-text\">UMD</code>的标准，在<code class=\"language-text\">ES6</code>中，<code class=\"language-text\">Javascript</code>终于有了官方标准的模块化方案，这篇博客我们就来看看<code class=\"language-text\">ES6</code>的模块化方案。</p>\n<h1 id=\"overview\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"定义和使用模块\"><a href=\"#%E5%AE%9A%E4%B9%89%E5%92%8C%E4%BD%BF%E7%94%A8%E6%A8%A1%E5%9D%97\" aria-label=\"定义和使用模块 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>定义和使用模块</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js-----</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo in lib.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar in lib.js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------main.js-----</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> foo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> bar <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib.js'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如上，是<code class=\"language-text\">ES6</code>中<code class=\"language-text\">Module</code>的用法，这里有两个保留字<code class=\"language-text\">import</code>和<code class=\"language-text\">export</code>，从上面的代码中，我们可以发现，对于不同的<code class=\"language-text\">export</code>方式，对应的<code class=\"language-text\">import</code>的方式也不一样。</p>\n<h2 id=\"name-export\"><a href=\"#name-export\" aria-label=\"name export permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Name Export</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js-----</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> a<span class=\"token punctuation\">;</span></code></pre></div>\n<p>如上，就是<code class=\"language-text\">name export</code>的写法，每一个函数或者变量，直接被<code class=\"language-text\">export</code>，这种每写一个函数或者变量就<code class=\"language-text\">export</code>的方式也叫做<code class=\"language-text\">inline export</code>，如果在一个<code class=\"language-text\">Module</code>中有很多需要<code class=\"language-text\">export</code>的东西，这种写法就有些累赘了，这时候可以写成这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js------</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    foo<span class=\"token punctuation\">,</span>\n    bar<span class=\"token punctuation\">,</span>\n    a\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>在<code class=\"language-text\">ES6 Module</code>中，有<code class=\"language-text\">local name</code>和<code class=\"language-text\">export name</code>的概念，顾名思义<code class=\"language-text\">local name</code>就是在<code class=\"language-text\">Module</code>中的名字，<code class=\"language-text\">export name</code>就是模块暴露给外界的名字。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js------</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// {A}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> \n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    foo <span class=\"token keyword\">as</span> bar<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// {B}</span>\n    bar <span class=\"token keyword\">as</span> foo<span class=\"token punctuation\">,</span>\n    a <span class=\"token keyword\">as</span> b<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>在上面的代码中，<code class=\"language-text\">{A}</code>行的<code class=\"language-text\">foo</code>是<code class=\"language-text\">local name</code>，在<code class=\"language-text\">{B}</code>行的<code class=\"language-text\">bar</code>是<code class=\"language-text\">export name</code>，同样的我们在<code class=\"language-text\">import</code>的时候也可以使用别名。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js------</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------main.js------</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> foo <span class=\"token keyword\">as</span> bar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"default-export\"><a href=\"#default-export\" aria-label=\"default export permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Default Export</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js------</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------main.js------</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'lib.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如上，我们<code class=\"language-text\">import</code>了一个<code class=\"language-text\">default</code>的<code class=\"language-text\">export</code>，<code class=\"language-text\">default export</code>和<code class=\"language-text\">name export</code>在<code class=\"language-text\">import</code>的时候，<code class=\"language-text\">name export</code>需要加大括号，而<code class=\"language-text\">default export</code>则不需要。</p>\n<h2 id=\"转发export\"><a href=\"#%E8%BD%AC%E5%8F%91export\" aria-label=\"转发export permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>转发export</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js------</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo in lib.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar in lib.js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n  foo<span class=\"token punctuation\">,</span>\n  bar<span class=\"token punctuation\">,</span>\n  a<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------middleLib.js------</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> foo <span class=\"token keyword\">as</span> bar<span class=\"token punctuation\">,</span> bar <span class=\"token keyword\">as</span> foo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ------main.js------</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">,</span> bar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./middleLib'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如上我们将模块<code class=\"language-text\">lib.js</code>中暴露的<code class=\"language-text\">export</code>通过另一个模块暴露出去了，这种常见的用法是，在封装好一个大的模块后，这个大的模块只需要向外界暴露部分小模块的<code class=\"language-text\">API</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">-</span> module\n  <span class=\"token operator\">--</span> a<span class=\"token punctuation\">.</span>js\n  <span class=\"token operator\">--</span> b<span class=\"token punctuation\">.</span>js\n  <span class=\"token operator\">--</span> index<span class=\"token punctuation\">.</span>js</code></pre></div>\n<p>如上，在<code class=\"language-text\">module</code>这个<code class=\"language-text\">folder</code>下我们有<code class=\"language-text\">a.js, b.js, index.js</code>，<code class=\"language-text\">a.js和b.js</code>是一些功能的实现，我们将<code class=\"language-text\">a.js, b.js</code>中需要向外界暴露的<code class=\"language-text\">API</code>通过<code class=\"language-text\">index.js</code>转发。</p>\n<h1 id=\"es6-module-under-hood\"><a href=\"#es6-module-under-hood\" aria-label=\"es6 module under hood permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6 Module Under Hood</h1>\n<p><code class=\"language-text\">ES6</code>给我们提供了很简洁的语法去使用模块，但是<code class=\"language-text\">ES Module</code>简洁的外表下，背后的细节仍然值得我们注意。</p>\n<h2 id=\"es-module是静态的\"><a href=\"#es-module%E6%98%AF%E9%9D%99%E6%80%81%E7%9A%84\" aria-label=\"es module是静态的 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES Module是静态的</h2>\n<p>如何理解<code class=\"language-text\">ES Module</code>是静态的这句话呢？意思就是，<code class=\"language-text\">ES Module</code>不同于<code class=\"language-text\">Common.js</code>这种模块化方案，只有在运行时才可以确定依赖的模块，在源码中看到的依赖关系就是运行时的依赖。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//------commonJSModule.js------</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n foo<span class=\"token punctuation\">,</span>\n bar<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//------main.js------</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>something<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./commonJSModule.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./commonJSModule.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如上，在<code class=\"language-text\">CommonJS</code>中这中动态的在运行时决定依赖的方式在<code class=\"language-text\">ES Module</code>中是行不通的（但是有提案在做运行时的<code class=\"language-text\">loader</code> —> <a href=\"https://github.com/whatwg/loader/%EF%BC%89%E3%80%82\">https://github.com/whatwg/loader/）。</a></p>\n<h2 id=\"es-module的变量提升\"><a href=\"#es-module%E7%9A%84%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87\" aria-label=\"es module的变量提升 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES Module的变量提升</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js------</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo in lib.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar in lib.js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n  foo<span class=\"token punctuation\">,</span>\n  bar<span class=\"token punctuation\">,</span>\n  a<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------main.js------</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">,</span> bar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如上，我们可以先调用<code class=\"language-text\">export</code>的函数，在调用之后再<code class=\"language-text\">import</code>，这个在编译的时候会将<code class=\"language-text\">import</code>提升到顶层，但是在实际开发的过程中，虽然可以这样，但是这并不是好的代码风格。</p>\n<h2 id=\"es-module是只读的\"><a href=\"#es-module%E6%98%AF%E5%8F%AA%E8%AF%BB%E7%9A%84\" aria-label=\"es module是只读的 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES Module是只读的</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------commonJSModule.js------</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    foo<span class=\"token punctuation\">,</span>\n    a<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------main.js------</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./lib.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./lib.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span></code></pre></div>\n<p>上面的代码在<code class=\"language-text\">CommonJS</code>下，我们可以修改<code class=\"language-text\">require</code>的东西，因为在<code class=\"language-text\">commonJS</code>中是拷贝一份，但是在<code class=\"language-text\">ES Module</code>中，我们无法修改<code class=\"language-text\">import</code>的东西，<code class=\"language-text\">import</code>的模块在行为上类似于<code class=\"language-text\">const</code>变量和<code class=\"language-text\">frozen object</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ------lib.js------</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo in lib.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar in lib.js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n  foo<span class=\"token punctuation\">,</span>\n  bar<span class=\"token punctuation\">,</span>\n  a<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------main.js------</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">,</span> a <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfoo<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// works {A}</span>\n<span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// error {B}</span></code></pre></div>\n<h2 id=\"es-module静态结构的设计带来的益处\"><a href=\"#es-module%E9%9D%99%E6%80%81%E7%BB%93%E6%9E%84%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9B%8A%E5%A4%84\" aria-label=\"es module静态结构的设计带来的益处 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES Module静态结构的设计带来的益处</h2>\n<p><code class=\"language-text\">ES Module</code>的静态结构的设计特点，让代码在编译的时候就能确定依赖关系，不同于运行时，只有代码跑起来的时候很多东西才能确定，就好比，你计划完成一项复杂的项目，静态的结构能保证你在做之前，你确定的事是不会变的，而不是只要等到在项目进行中去确定，面对可预测的问题，我们是好解决的。</p>\n<ul>\n<li>有助于在代码打包的时候做 <code class=\"language-text\">dead code elimination</code>，减小<code class=\"language-text\">bundle</code>文件的大小（<code class=\"language-text\">RollUp</code>基于<code class=\"language-text\">ES Module</code>实现了<code class=\"language-text\">tree shaking</code>）</li>\n<li>静态的结构有助于<code class=\"language-text\">lint</code>工具的检测</li>\n<li>为<code class=\"language-text\">javascript</code>支持宏做准备（宏操作需要静态的结构 —> <a href=\"https://www.sweetjs.org/%EF%BC%89\">https://www.sweetjs.org/）</a></li>\n</ul>\n<h1 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<ul>\n<li><a href=\"http://exploringjs.com/es6/ch_modules.html\">ES6 Module</a></li>\n<li><a href=\"https://stackoverflow.com/questions/41706953/are-the-new-ecmascript-6-import-and-export-asynchronous\">Are the new ECMAScript 6 import and export asynchronous?</a></li>\n</ul>\n<hr>\n<p><strong><em>兴趣遍地都是，坚持和持之以恒才是稀缺的</em></strong></p>","frontmatter":{"title":"ES6 Module","date":"March 16, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019-3-16-ESModule/","previous":{"fields":{"slug":"/2019-3-2-AsyncAndDeferInScript/"},"frontmatter":{"title":"script在HTML中的加载","category":"Tech"}},"next":{"fields":{"slug":"/2019-3-23-StateManager/"},"frontmatter":{"title":"实现一个前端状态管理库","category":"Tech"}}}}