{"version":3,"sources":["webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js","webpack:///./src/components/elements/hr/index.jsx","webpack:///./src/components/post-title/index.jsx","webpack:///./src/components/post-container/index.jsx","webpack:///./src/components/post-navigator/index.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/components/disqus/index.jsx","webpack:///./src/components/utterances/index.jsx","webpack:///./src/templates/blog-post.js"],"names":["module","exports","Object","defineProperty","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","this","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","identifier","_this2","reduce","memo","some","config","_defineProperty","createElement","id","child","disqus","document","parent","getElementsByTagName","async","type","src","shortname","appendChild","_this3","forEach","DISQUS","reset","reload","url","replace","window","disqus_config","addDisqusScript","Component","displayName","propTypes","string","isRequired","title","category_id","func","defaultProps","location","href","Hr","className","PostTitle","PostContainer","html","dangerouslySetInnerHTML","__html","PostNavigator","pageContext","previous","next","to","fields","slug","rel","frontmatter","_assertThisInitialized","Disqus","state","toasts","notifyAboutComment","bind","onSnackbarDismiss","setState","slice","push","text","render","post","shortName","siteUrl","Utterences","repo","rootElm","React","createRef","useEffect","utterances","utterancesConfig","branch","crossorigin","configKey","setAttribute","current","ref","data","ScrollManager","markdownRemark","metaData","site","siteMetadata","comment","disqusShortName","author","sponsor","description","excerpt"],"mappings":"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","file":"component---src-templates-blog-post-js-02334b66f8a475d31b00.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n  var onNewComment = props.onNewComment,\n      language = props.language,\n      rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n  for (var prop in rest) {\n    context.page[prop] = rest[prop];\n  } // Setting the language - if none is provided, the default one is used\n\n\n  context.language = language;\n\n  if (onNewComment) {\n    context.callbacks = {\n      onNewComment: [onNewComment]\n    };\n  }\n}\n\nvar DisqusThread = function (_React$Component) {\n  _inherits(DisqusThread, _React$Component);\n\n  function DisqusThread() {\n    _classCallCheck(this, DisqusThread);\n\n    return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n  }\n\n  _createClass(DisqusThread, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loadDisqus();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.loadDisqus();\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextProps.identifier !== this.props.identifier;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = Object.keys(this.props).reduce(function (memo, key) {\n        return DISQUS_CONFIG.some(function (config) {\n          return config === key;\n        }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n      }, {});\n      return _react2.default.createElement('div', props, _react2.default.createElement('div', {\n        id: 'disqus_thread'\n      }));\n    }\n  }, {\n    key: 'addDisqusScript',\n    value: function addDisqusScript() {\n      if (__disqusAdded) {\n        return;\n      }\n\n      var child = this.disqus = document.createElement('script');\n      var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n      child.async = true;\n      child.type = 'text/javascript';\n      child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n      parent.appendChild(child);\n      __disqusAdded = true;\n    }\n  }, {\n    key: 'loadDisqus',\n    value: function loadDisqus() {\n      var _this3 = this;\n\n      var props = {}; // Extract Disqus props that were supplied to this component\n\n      DISQUS_CONFIG.forEach(function (prop) {\n        // prop \"shortname\" is only necessary for loading the script, not for the config itself\n        if (prop !== 'shortname' && !!_this3.props[prop]) {\n          props[prop] = _this3.props[prop];\n        }\n      }); // If Disqus has already been added, reset it\n\n      if (typeof DISQUS !== 'undefined') {\n        DISQUS.reset({\n          reload: true,\n          config: function config() {\n            copyProps(this, props); // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n\n            this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n          }\n        });\n      } else {\n        // Otherwise add Disqus to the page\n        window.disqus_config = function () {\n          copyProps(this, props);\n        };\n\n        this.addDisqusScript();\n      }\n    }\n  }]);\n\n  return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\nDisqusThread.propTypes = {\n  id: _propTypes2.default.string,\n\n  /**\n   * `shortname` tells the Disqus service your forum's shortname,\n   * which is the unique identifier for your website as registered\n   * on Disqus. If undefined , the Disqus embed will not load.\n   */\n  shortname: _propTypes2.default.string.isRequired,\n\n  /**\n   * `identifier` tells the Disqus service how to identify the\n   * current page. When the Disqus embed is loaded, the identifier\n   * is used to look up the correct thread. If disqus_identifier\n   * is undefined, the page's URL will be used. The URL can be\n   * unreliable, such as when renaming an article slug or changing\n   * domains, so we recommend using your own unique way of\n   * identifying a thread.\n   */\n  identifier: _propTypes2.default.string,\n\n  /**\n   * `title` tells the Disqus service the title of the current page.\n   * This is used when creating the thread on Disqus for the first time.\n   * If undefined, Disqus will use the <title> attribute of the page.\n   * If that attribute could not be used, Disqus will use the URL of the page.\n   */\n  title: _propTypes2.default.string,\n\n  /**\n   * `url` tells the Disqus service the URL of the current page.\n   * If undefined, Disqus will take the window.location.href.\n   * This URL is used to look up or create a thread if disqus_identifier\n   * is undefined. In addition, this URL is always saved when a thread is\n   * being created so that Disqus knows what page a thread belongs to.\n   */\n  url: _propTypes2.default.string,\n\n  /**\n   * `category_id` tells the Disqus service the category to be used for\n   * the current page. This is used when creating the thread on Disqus\n   * for the first time.\n   */\n  category_id: _propTypes2.default.string,\n\n  /**\n   * `onNewComment` function accepts one parameter `comment` which is a\n   * JavaScript object with comment `id` and `text`. This allows you to track\n   * user comments and replies and run a script after a comment is posted.\n   */\n  onNewComment: _propTypes2.default.func,\n\n  /**\n   * `language` tells the Disqus service which language should be used.\n   * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n   * If undefined, English is used as default one\n   */\n  language: _propTypes2.default.string\n};\nDisqusThread.defaultProps = {\n  url: typeof window === 'undefined' ? null : window.location.href\n};\nexports.default = DisqusThread;","import React from 'react'\n\nimport './index.scss'\n\nexport const Hr = () => <hr className=\"custom-hr\" />\n","import React from 'react'\n\nexport const PostTitle = ({ title }) => <h1>{title}</h1>\n","import React from 'react'\n\nexport const PostContainer = ({ html }) => (\n  <div dangerouslySetInnerHTML={{ __html: html }} />\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nexport const PostNavigator = ({ pageContext }) => {\n  const { previous, next } = pageContext\n\n  return (\n    <ul className=\"navigator\">\n      <li>\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n      </li>\n      <li>\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </li>\n    </ul>\n  )\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React, { Component } from 'react'\nimport ReactDisqusComments from 'react-disqus-comments'\n\nexport class Disqus extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { toasts: [] }\n    this.notifyAboutComment = this.notifyAboutComment.bind(this)\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this)\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts\n    this.setState({ toasts })\n  }\n\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice()\n    toasts.push({ text: 'New comment available!!' })\n    this.setState({ toasts })\n  }\n\n  render() {\n    const { post, shortName, siteUrl, slug } = this.props\n    const url = siteUrl + slug\n\n    return (\n      <ReactDisqusComments\n        shortname={shortName}\n        identifier={post.frontmatter.title}\n        title={post.frontmatter.title}\n        url={url}\n        category_id={post.frontmatter.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    )\n  }\n}\n","import React, { useEffect } from 'react'\n\nconst src = 'https://utteranc.es/client.js'\nconst branch = 'master'\n\nexport const Utterences = ({ repo }) => {\n  const rootElm = React.createRef()\n\n  useEffect(() => {\n    const utterances = document.createElement('script')\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    }\n\n    Object.keys(utterancesConfig).forEach(configKey => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    rootElm.current.appendChild(utterances)\n  }, [])\n\n  return <div className=\"utterences\" ref={rootElm} />\n}\n","import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\n\nimport * as Elements from '../components/elements'\nimport { Layout } from '../layout'\nimport { Head } from '../components/head'\nimport { PostTitle } from '../components/post-title'\nimport { PostContainer } from '../components/post-container'\nimport { SocialShare } from '../components/social-share'\nimport { SponsorButton } from '../components/sponsor-button'\nimport { Bio } from '../components/bio'\nimport { PostNavigator } from '../components/post-navigator'\nimport { Disqus } from '../components/disqus'\nimport { Utterences } from '../components/utterances'\nimport * as ScrollManager from '../utils/scroll'\n\nimport '../styles/code.scss'\n\nexport default ({ data, pageContext, location }) => {\n  useEffect(() => {\n    ScrollManager.init()\n    return () => ScrollManager.destroy()\n  }, [])\n  // {\n  //   !!sponsor.buyMeACoffeeId && (\n  //     <SponsorButton sponsorId={sponsor.buyMeACoffeeId} />\n  //   )\n  // }\n  const post = data.markdownRemark\n  const metaData = data.site.siteMetadata\n  const { title, comment, siteUrl, author, sponsor } = metaData\n  const { disqusShortName, utterances } = comment\n\n  return (\n    <Layout location={location} title={title}>\n      <Head title={post.frontmatter.title} description={post.excerpt} />\n      <PostTitle title={post.frontmatter.title} />\n      <PostContainer html={post.html} />\n      <Elements.Hr />\n      <Bio />\n      <PostNavigator pageContext={pageContext} />\n      {!!disqusShortName && (\n        <Disqus\n          post={post}\n          shortName={disqusShortName}\n          siteUrl={siteUrl}\n          slug={pageContext.slug}\n        />\n      )}\n      {!!utterances && <Utterences repo={utterances} />}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n        comment {\n          disqusShortName\n          utterances\n        }\n        sponsor {\n          buyMeACoffeeId\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 280)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}